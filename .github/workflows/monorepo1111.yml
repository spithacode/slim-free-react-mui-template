name: Componly project test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workspaces:
          - ./complete-template
          - ./clean-template

    continue-on-error: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3

      - name: Setup Node.js
        uses: actions/setup-node@v2.5.2
        with:
          node-version: 18

     


      - name: Install dependencies
        id: install-dependencies
        run: |
          echo -e "\n@componly:registry=https://npm.pkg.github.com/" >> .npmrc
          echo //npm.pkg.github.com/:_authToken=${{ secrets.COMPONLY_NPM_AUTH_TOKEN }} >> .npmrc
          if [[ "${{ matrix.workspaces}}" != "empty" ]]; then
              pwd
              pushd ${{ matrix.workspaces }}
              echo "workspace : -----> ${{ matrix.workspaces}}"
              yarn install --prefer-offline && yarn add @componly/core  @componly/schemas  @componly/cli axios form-data  -D --prefer-offline
              popd
          else
              echo "No workspaces to install. Running 'yarn install' in the root directory."
              yarn install --prefer-offline && yarn add @componly/core  @componly/schemas  @componly/cli axios form-data  -D --prefer-offline
          fi


          echo -e "\n@componly:registry=https://npm.pkg.github.com/" >> .npmrc
          echo //npm.pkg.github.com/:_authToken=${{ secrets.COMPONLY_NPM_AUTH_TOKEN }} >> .npmrc
          if [[ "${{ matrix.workspaces}}" != "empty" ]]; then
              pwd
              pushd ${{ matrix.workspaces }}
              yarn install && yarn add @componly/core  @componly/schemas  @componly/cli axios -D 
              popd
          else
              echo "No workspaces to install. Running 'yarn install' in the root directory."
              yarn install && yarn add @componly/core  @componly/schemas  @componly/cli axios -D 
          fi

      - name: Pre scan.json
        id: pre-scan
        uses: actions/github-script@v6.4.1
        with:
          script: |
            process.chdir("${{ matrix.workspaces}}")
            const { writeFileSync ,mkdirSync,existsSync} = require("fs");
            const axios = require("axios");

            const instance = axios.create({
              baseURL: "https://ad27-154-246-117-15.ngrok-free.app",
              headers: {
                "Content-Type": "application/json",
              },
            });

            async function preScan() {
              const projectLoginResponse = await instance.post("/auth/login/cli", {
                cliId: "${{secrets.COMPONLY_API_KEY}}",
                password: "${{secrets.COMPONLY_API_SECRET}}",
              });

              const token = projectLoginResponse.data.token;

              const response = await instance.get(
                '/companies/cli/design-systems/all',
                {
                  headers: {
                    Authorization: `Bearer ${token}`
                  },
                }
              );
              if(!existsSync(".componly")){
                mkdirSync(".componly")
              }
              writeFileSync(".componly/ds.json", JSON.stringify(response.data, undefined, 2))

              console.log(response.status);
            }

            preScan().catch(console.log);

      - name: scan
        id: componly-scan
        run: |
          ls -a 
          cd  ${{ matrix.workspaces }}   
          npx componly scan   --design-systems-path   ./.componly/ds.json --config-path ./   --project  ./

      - name: Post scan.json
        id: post-scan
        if: always()
        env:
          COMMIT_NAME: ${{ github.event.head_commit.message }}
          COMMIT_HASH: ${{ github.sha }}
          STEP_OUTCOME: ${{ steps.componly-scan.outcome }}
          RUN_ID: ${{ github.run_id }}
          REPO_NAME: ${{ github.repository }}
          WORKFLOW_NAME: ${{ github.workflow }}
          JOB_NAME: ${{ github.job }}
        uses: actions/github-script@v6.4.1
        with:
          script: |
            process.chdir("${{ matrix.workspaces}}");
            const commitName = process.env.COMMIT_NAME;
            const commitHash = process.env.COMMIT_HASH;
            const stepOutcome = process.env.STEP_OUTCOME; // Added missing stepOutcome
            const runId = process.env.RUN_ID;
            const repoName = process.env.REPO_NAME;
            const workflowName = process.env.WORKFLOW_NAME;
            const jobName = process.env.JOB_NAME;
            const jobUrl = `https://github.com/${repoName}/actions/runs/${runId}#workflow:${workflowName}+event:${jobName}`;

            console.log("Job URL:", jobUrl);
            console.log("commit name", commitName);
            console.log("commit hash", commitHash); // Corrected "commmit" to "commit"
            console.log("step outcome", stepOutcome); // Added missing stepOutcome
            const workspaces = "${{ matrix.workspaces }}";
            console.log("workspaces------------>", workspaces);
            const FormData = require("form-data");
            const { createReadStream, readFileSync } = require("fs");
            const axios = require("axios");

            const instance = axios.create({
              baseURL: "https://ad27-154-246-117-15.ngrok-free.app",
              headers: {
                "Content-Type": "application/json",
              },
            });

            async function postScan() {
              const formData = new FormData();

              const serializedConfig = readFileSync("./componly.config.json");
              const { codebaseID } = JSON.parse(serializedConfig);
              
              const projectLoginResponse = await instance.post("/auth/login/cli", {
                cliId: "${{secrets.COMPONLY_API_KEY}}",
                password: "${{secrets.COMPONLY_API_SECRET}}",
              });

              const token = projectLoginResponse.data.token;
              if (stepOutcome === 'failure') { 
                console.log("error in scan");
                const response = await instance.post(
                  `/scans/submit-failure/${codebaseID}`,
                  {},
                  {
                    headers: {
                      Authorization: `Bearer ${token}`,
                    },
                    params: {
                      commitMessage: commitName,
                      commitHash: commitHash,
                      jobUrl: jobUrl,
                    },
                  }
                );
                return;
              }
              const fileStream = createReadStream("./.componly/scan.json");
              formData.append("file", fileStream);

              const response = await instance.post(
                `/scans/upload/${codebaseID}`,
                formData,
                {
                  headers: {
                    Authorization: `Bearer ${token}`,
                    ...formData.getHeaders(),
                  },
                  params: {
                    commitMessage: commitName,
                    commitHash: commitHash,
                    jobUrl: jobUrl,
                  },
                }
              );

              console.log(response.status);
            }

            postScan().catch(console.log);
